name: tests

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pytest-group: [ 1, 2, 3, 4 ]
      fail-fast: false
    steps:
      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y git
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.10
      - name: Download required tools
        run: |
          KUSTOMIZE_VERSION=v4.1.3
          HELM_VERSION=v3.6.3
          KUBESEAL_VERSION=v0.16.0
          wget -O kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && \
              tar xzf kustomize.tar.gz && \
              sudo mv kustomize /usr/bin && \
              rm kustomize.tar.gz
          wget -O helm.tar.gz https://get.helm.sh/helm-$HELM_VERSION-linux-amd64.tar.gz && \
              tar xzf helm.tar.gz && \
              sudo mv linux-amd64/helm /usr/bin && \
              rm helm.tar.gz
          wget -O kubeseal https://github.com/bitnami-labs/sealed-secrets/releases/download/$KUBESEAL_VERSION/kubeseal-linux-amd64 && \
              chmod +x kubeseal && \
              sudo mv kubeseal /usr/bin
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - name: Cache dot-kube
        id: cache-dot-kube
        uses: actions/cache@v2
        with:
          path: .kube
          key: ${{ runner.os }}-dot-kube
      - name: Install dependencies
        run: |
          pip install .
          pip install -r requirements-dev.txt
      - name: Run tests
        env:
          PYTEST_SPLITS: 4
          PYTEST_GROUP: ${{ matrix.pytest-group }}
        run: |
          pytest --splits $PYTEST_SPLITS --group $PYTEST_GROUP
  check-code:
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y git
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.10
      - name: pip install
        run: |
          pip install .
      - name: check-docs
        run: |
          python scripts/replace-commands-help.py
          if [ "$(git status --porcelain)" != "" ]; then
            echo "commands.md is not up-to-date. Run ./scripts/replace-commands-help.py to fix this!"
            exit 1
          fi
